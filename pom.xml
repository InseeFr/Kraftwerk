<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.insee.kraftwerk</groupId>
	<artifactId>kraftwerk</artifactId>
	<version>3.7.0</version>
	<packaging>pom</packaging>
	<name>kraftwerk</name>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.6</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<properties>
		<java.version>21</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<cucumber.version>7.30.0</cucumber.version>
		<junit-jupiter.version>5.13.4</junit-jupiter.version>

		<!-- Proprietes sonar -->
		<jacoco.version>0.8.13</jacoco.version>
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.language>java</sonar.language>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<skipSurefireReport>true</skipSurefireReport>
		<sonar.coverage.exclusions>
			src/main/java/fr/insee/kraftwerk/api/client/*,
			src/main/java/fr/insee/kraftwerk/api/configuration/*
			src/main/java/fr/insee/kraftwerk/api/configuration/*
			**/kraftwerk-encryption-tests/**
			**/kraftwerk-functional-tests/**
		</sonar.coverage.exclusions>
		<!-- Pi Test-->
		<pitest.version>1.20.3</pitest.version>
		<pitest.junit.version>1.2.3</pitest.junit.version>
	
	</properties>
	<modules>
		<module>kraftwerk-core</module>
		<module>kraftwerk-encryption</module>
		<module>kraftwerk-api</module>
        <module>kraftwerk-functional-tests</module>
        <module>kraftwerk-encryption-tests</module>
    </modules>
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-to-slf4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Tests -->
		<!-- Unit testing with JUnit -->
		<!-- (imported with Spring) -->
		<!-- Functional testing with Cucumber -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java8</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- AssertJ -->
		<!-- https://www.baeldung.com/introduction-to-assertj -->
		<!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
			<!-- version from parent pom -->
		</dependency>
		<!-- Logging -->
		<!-- Logback -->
		<!-- (imported with Spring) -->
		<!-- Lombok to write less boilerplate code -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
			<!-- version from parent pom -->
		</dependency>

	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>5.2.0.4988</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<executions>
						<execution>
							<id>default-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>report-aggregate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
			<plugin>
			    <groupId>org.pitest</groupId>
			    <artifactId>pitest-maven</artifactId>
			    <version>${pitest.version}</version>
			    <configuration>
			        <targetClasses>
			            <param>fr.insee.kraftwerk.*</param>
			        </targetClasses>
			        <targetTests>
			            <param>fr.insee.kraftwerk.*</param>
					</targetTests>
					<mutators>
					  <mutator>STRONGER</mutator>
					</mutators>
			     </configuration>			     
			     <dependencies>
	                <dependency>
	                    <groupId>org.pitest</groupId>
	                    <artifactId>pitest-junit5-plugin</artifactId>
	                    <version>${pitest.junit.version}</version>
	                </dependency>
            	</dependencies>
			</plugin>
		</plugins>
	</build>
</project>
